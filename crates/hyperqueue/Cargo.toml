[package]
name = "hyperqueue"
version = "0.22.0"
description = "Job execution system"
authors.workspace = true
edition.workspace = true
rust-version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
log = { workspace = true }
env_logger = { workspace = true }
futures = { workspace = true }
tokio = { workspace = true, features = ["full"] }
tokio-util = { workspace = true, features = ["codec"] }
clap = { workspace = true, features = ["derive", "env"] }
clap_complete = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
serde_bytes = { workspace = true }
bytes = { workspace = true }
thiserror = { workspace = true }
gethostname = { workspace = true }
chrono = { workspace = true, features = ["serde"] }
orion = { workspace = true }
hex = { workspace = true }
bincode = { workspace = true }
smallvec = { workspace = true }
rand = { workspace = true }
anyhow = { workspace = true }
tempfile = { workspace = true }
nix = { workspace = true }
bstr = { workspace = true }
psutil = { workspace = true }
thin-vec = { workspace = true }

humantime = "2"
num_cpus = "1"
cli-table = { version = "0.5", default-features = false }
atty = "0.2"
dirs = "6"
nom = "7"
nom-supreme = { version = "0.8" }
colored = "3"
const_format = "0.2"
textwrap = "0.16"
chumsky = "0.9"
toml = "0.8"
signal-hook = "0.3"
core_affinity = "0.8"
itertools = "0.14.0"
lru = "0.13"
open = "5"

# Dashboard
ratatui = { version = "0.29", default-features = false, features = ["crossterm"], optional = true }
crossterm = { version = "0.28", features = ["event-stream"], optional = true }
unicode-width = { version = "0.2", optional = true }

# Tako
tako = { path = "../tako" }

# Optional dependencies
jemallocator = { version = "0.5", optional = true }
which = "7.0.2"

[dev-dependencies]
derive_builder = { workspace = true }
insta = "1.15.0"
criterion = { workspace = true }

[features]
default = ["jemalloc", "dashboard"]
# Use the jemalloc allocator
jemalloc = ["jemallocator"]
# Enable the dashboard
dashboard = ["dep:ratatui", "dep:crossterm", "dep:unicode-width"]

[[bench]]
name = "benchmark"
harness = false

# Workaround for Criterion (https://bheisler.github.io/criterion.rs/book/faq.html#cargo-bench-gives-unrecognized-option-errors-for-valid-command-line-options)
[lib]
bench = false

# Pass RUSTFLAGS="--cfg zero_worker" to enable a mode that does not execute tasks
# It is useful for benchmarking HQ overhead.
# It is not a normal Cargo feature, because it would break building with `--all-features`.
[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(zero_worker)'] }

[lints.clippy]
dbg_macro = "deny"
