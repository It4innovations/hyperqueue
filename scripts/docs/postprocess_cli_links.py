"""
This scripts goes through Markdown links starting with `cli:` and turns them into links into the
CLI reference generated by cli_doc. A link such as `cli:hq.server.start` is turned into a link to
`/cli-reference/#hq/server/start`.

Links cannot span a line! Keep them on a single line.
"""

import re

# Regex to match CLI links like [Foo](cli:hq.server.start)
CLI_LINK_REGEX = re.compile(r"\[([^\]]+)\]\(cli:([^)]+)\)")

cli_links_processed = 0
site_url = None


def on_config(config, **kwargs):
    global site_url

    # Normalize API site url
    site_url = config.get("site_url") or "/"
    if site_url and site_url[-1] != "/":
        site_url = f"{site_url}/"


def process_cli_links(markdown_content: str) -> str:
    """Process CLI links in markdown content, converting cli:hq.server.start to /cli-reference/#hq/server/start"""

    def replace_cli_link(match):
        global cli_links_processed
        link_text = match.group(1)
        cli_command = match.group(2)
        cli_links_processed += 1
        # Convert dots to slashes for URL path
        cli_path = cli_command.replace(".", "/")
        cli_url = f"{site_url}cli-reference/#{cli_path}"
        return f"[{link_text}]({cli_url})"

    return CLI_LINK_REGEX.sub(replace_cli_link, markdown_content)


def on_page_markdown(markdown: str, page, config, files):
    """MkDocs hook to process CLI links on each page"""
    return process_cli_links(markdown)


def on_post_build(config):
    print(f"Processed {cli_links_processed} CLI links")
