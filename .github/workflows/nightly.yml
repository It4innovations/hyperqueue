name: Create nightly build release

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
jobs:
  build-binaries-x64:
    runs-on: ubuntu-latest
    # Use a container with GLIBC 2.17
    container: quay.io/pypa/manylinux2014_x86_64
    steps:
      - name: Show GLIBC
        run: ldd --version
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v1
        with:
          key: x64

      - name: Compile
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Strip binary
        run: strip target/release/hq

      - name: Prepare archive
        id: archive
        run: |
          export ARCHIVE_NAME=hq-nightly-linux-x64.tar.gz
          tar -czvf $ARCHIVE_NAME -C target/release hq
          echo "::set-output name=archive-name::$ARCHIVE_NAME"

      - name: Store archive
        uses: actions/upload-artifact@v2
        with:
          name: archive-x64
          path: ${{ steps.archive.outputs.archive-name }}
  build-binaries-powerpc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
        with:
          key: powerpc64le-unknown-linux-gnu
      - name: Compile
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target powerpc64le-unknown-linux-gnu --no-default-features --release
          use-cross: true
      - name: Prepare archive
        id: archive
        run: |
          export ARCHIVE_NAME=hq-nightly-linux-powerpc64.tar.gz
          tar -czvf $ARCHIVE_NAME -C target/powerpc64le-unknown-linux-gnu/release hq
          echo "::set-output name=archive-name::$ARCHIVE_NAME"

      - name: Store archive
        uses: actions/upload-artifact@v2
        with:
          name: archive-powerpc64
          path: ${{ steps.archive.outputs.archive-name }}
  create-tag:
    runs-on: ubuntu-latest
    needs: [ build-binaries-x64, build-binaries-powerpc ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Create tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: nightly
          force_push_tag: true
          message: "Nightly build"
  create-release:
    runs-on: ubuntu-latest
    needs: [ create-tag ]
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Generate changelog
        run: python3 scripts/extract_changelog.py DEV > generated-changelog.md

      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Create release
        uses: ncipollo/release-action@v1
        id: create-release
        with:
          bodyFile: generated-changelog.md
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          name: Nightly build
          prerelease: true
          tag: nightly
          commit: ${{ github.sha }}
          artifacts: archive-*/**
