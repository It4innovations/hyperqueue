name: Create release

on:
  workflow_dispatch:
    inputs:
      sha:
        description: "Commit SHA to create release from"
        required: true
      tag:
        description: "Tag of the release"
        required: true
  push:
    tags:
      - 'v*'
jobs:
  set-env:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ env.SHA }}
      tag: ${{ env.TAG }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Set env on push
        if: github.event_name == 'push'
        run: |
          echo "SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "TAG=$(git tag --points-at HEAD)" >> $GITHUB_ENV
      - name: Set env on trigger
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "SHA=${{ github.event.inputs.sha }}" >> $GITHUB_ENV
          echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
      - name: Check values
        run: |
          echo "sha: ${{ env.SHA }}"
          echo "tag: ${{ env.TAG }}"

  build-binaries-x64:
    runs-on: ubuntu-latest
    # Use a container with GLIBC 2.17
    container: quay.io/pypa/manylinux2014_x86_64
    needs: [set-env]
    steps:
      - name: Show GLIBC
        run: ldd --version
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.set-env.outputs.sha }}
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v1
        with:
          key: x64

      - name: Compile
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Strip binary
        run: strip target/release/hq

      - name: Prepare archive
        id: archive
        run: |
          export ARCHIVE_NAME=hq-${{ needs.set-env.outputs.tag }}-linux-x64.tar.gz
          tar -czvf $ARCHIVE_NAME -C target/release hq
          echo "::set-output name=archive-name::$ARCHIVE_NAME"

      - name: Store archive
        uses: actions/upload-artifact@v2
        with:
          name: archive-x64
          path: ${{ steps.archive.outputs.archive-name }}

  build-binaries-powerpc:
    runs-on: ubuntu-latest
    needs: [ set-env ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.set-env.outputs.sha }}
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v1
        with:
          key: powerpc64le-unknown-linux-gnu

      - name: Compile
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target powerpc64le-unknown-linux-gnu --no-default-features --release
          use-cross: true

      - name: Prepare archive
        id: archive
        run: |
          export ARCHIVE_NAME=hq-${{ needs.set-env.outputs.tag }}-linux-powerpc64.tar.gz
          tar -czvf $ARCHIVE_NAME -C target/powerpc64le-unknown-linux-gnu/release hq
          echo "::set-output name=archive-name::$ARCHIVE_NAME"

      - name: Store archive
        uses: actions/upload-artifact@v2
        with:
          name: archive-powerpc64
          path: ${{ steps.archive.outputs.archive-name }}
  create-release:
    runs-on: ubuntu-latest
    needs: [ set-env, build-binaries-x64, build-binaries-powerpc ]
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.set-env.outputs.sha }}

      - name: Generate changelog
        run: python3 scripts/extract_changelog.py ${{ needs.set-env.outputs.tag }} > generated-changelog.md

      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.set-env.outputs.tag }}
          release_name: ${{ needs.set-env.outputs.tag }}
          body_path: generated-changelog.md
          commitish: ${{ needs.set-env.outputs.sha }}
          draft: false
          prerelease: false
  upload-binaries:
    runs-on: ubuntu-latest
    needs: [set-env, create-release]
    strategy:
      matrix:
        arch: [x64, powerpc64]
    steps:
      - name: Download archive
        uses: actions/download-artifact@v2
        with:
          name: archive-${{ matrix.arch }}
      - name: Upload HQ binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: hq-${{ needs.set-env.outputs.tag }}-linux-${{ matrix.arch }}.tar.gz
          asset_name: hq-${{ needs.set-env.outputs.tag }}-linux-${{ matrix.arch }}.tar.gz
          asset_content_type: application/tar+gzip
