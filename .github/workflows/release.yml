name: Create release

on:
  workflow_dispatch:
    inputs:
      sha:
        description: "Commit SHA to create release from"
        required: true
      tag:
        description: "Tag of the release"
        required: true
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    # Use a container with GLIBC 2.17
    container: quay.io/pypa/manylinux2014_x86_64
    steps:
      - name: Show GLIBC
        run: ldd --version
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.sha || env.GITHUB_SHA }}

      - name: Set env on push
        if: github.event_name == 'push'
        run: |
          echo "INPUT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "INPUT_TAG=$(git tag --points-at HEAD)" >> $GITHUB_ENV

      - name: Set env on trigger
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "INPUT_SHA=${{ github.event.inputs.sha }}" >> $GITHUB_ENV
          echo "INPUT_TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v1

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Prepare archive
        run: |
          strip target/release/hq
          export ARCHIVE_NAME=hq-${{ env.INPUT_TAG }}-linux-x64.tar.gz
          echo "ARCHIVE_NAME=$ARCHIVE_NAME" >> $GITHUB_ENV
          tar -czvf $ARCHIVE_NAME -C target/release hq

      - name: Generate changelog
        run: /opt/python/cp38-cp38/bin/python scripts/extract_changelog.py ${{ env.INPUT_TAG }} > generated-changelog.md

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.INPUT_TAG }}
          release_name: ${{ env.INPUT_TAG }}
          body_path: generated-changelog.md
          commitish: ${{ env.INPUT_SHA }}
          draft: false
          prerelease: false

      - name: Upload scheduler binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ARCHIVE_NAME }}
          asset_name: ${{ env.ARCHIVE_NAME }}
          asset_content_type: application/tar+gzip
